[General]
network = LispSyncTest
seed-set = ${runnumber}
sim-time-limit = 5minutes
debug-on-errors = true

#Statistic collection
**.result-recording-modes = all

**.scenarioManager.script = xmldoc("scenario.xml")

# Routers IDs
**.xTR1.deviceId 			= "xTR1"
**.xTR2.deviceId 			= "xTR2"
**.MRMS.deviceId 			= "MRMS"
**Core.deviceId 			= "Core"
**.xTR_Responder.deviceId 	= "xTR_Responder"
**.Host1.deviceId 			= "Host1"
**.Host2.deviceId 			= "Host2"

#Turn on/off RIP/RIPng
**.enabled = false

#LISP config
**.xTR1.LISP.configData 			= xmldoc("config.xml", "Devices/Router[@id='xTR1']/Routing/LISP")
**.xTR2.LISP.configData 			= xmldoc("config.xml", "Devices/Router[@id='xTR2']/Routing/LISP")
**.MRMS.LISP.configData				= xmldoc("config.xml", "Devices/Router[@id='MRMS']/Routing/LISP")
**.xTR_Responder.LISP.configData 	= xmldoc("config.xml", "Devices/Router[@id='xTR_Responder']/Routing/LISP")

#PingApps
**.xTR_Responder.numOfLoopbacks = 20
**.numPingApps = 10

**.Host1.pingApp[*].srcAddr = "192.168.1.101"
**.Host1.pingApp[*].destAddr = "172.16." + string(intuniform(0,9)) + ".1" 
**.Host1.pingApp[*].sendInterval = uniform(9s, 11s) 
**.Host1.pingApp[*].startTime = 70s + uniform(0s, 10s)

**.Host2.pingApp[*].srcAddr = "192.168.1.102"
**.Host2.pingApp[*].destAddr = "172.16." + string(intuniform(10,19)) + ".1" 
**.Host2.pingApp[*].sendInterval = uniform(9s, 11s) 
**.Host2.pingApp[*].startTime = 120s + uniform(0s, 10s)

[Config CacheSyncNaive]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"

[Config CacheSyncSmart]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"


[Config General-2outages]
**.scenarioManager.script = xmldoc("scenario2.xml")

[Config CacheSyncNaive-2outages]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"
**.scenarioManager.script = xmldoc("scenario2.xml")

[Config CacheSyncSmart-2outages]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"
**.scenarioManager.script = xmldoc("scenario2.xml")

[Config General-wAck]
**.xTR1.LISP.lispMapCache.cacheSyncAck = true
**.xTR2.LISP.lispMapCache.cacheSyncAck = true

[Config CacheSyncNaive-wAck]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Naive"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"
**.xTR1.LISP.lispMapCache.cacheSyncAck = true
**.xTR2.LISP.lispMapCache.cacheSyncAck = true

[Config CacheSyncSmart-wAck]
seed-set = ${runnumber}
**.xTR1.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR2.LISP.lispMapCache.cacheSynchronization = "Smart"
**.xTR1.LISP.lispMapCache.ssAddressType = "EID"
**.xTR2.LISP.lispMapCache.ssAddressType = "EID"
**.xTR1.LISP.lispMapCache.cacheSyncAck = true
**.xTR2.LISP.lispMapCache.cacheSyncAck = true
